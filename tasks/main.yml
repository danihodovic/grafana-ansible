---
- name: Create grafana dir
  notify: restart_grafana
  become: true
  file:
    path: '{{ grafana_dir }}'
    state: directory

- name: Create data sources dir
  notify: restart_grafana
  file:
    path: '{{ grafana_dir }}/provisioning/datasources'
    state: directory
    mode: 0770
    group: developers

- name: Add Grafana config files
  notify: restart_grafana
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0660
    group: developers
  with_items:
    - src: ../templates/datasource.yml
      dest: '{{ grafana_dir }}/provisioning/datasources/datasources.yml'
    - src: ../templates/docker-compose.yml
      dest: '{{ grafana_dir }}/docker-compose.yml'

- name: Pull image
  docker_image:
    name: '{{ grafana_image }}'
    force: true

- name: Start container
  notify: health_check_grafana
  docker_container:
    image: '{{ grafana_image }}'
    name: '{{ grafana_container_name }}'
    restart_policy: unless-stopped
    memory: '{{ grafana_memory }}'
    cpu_shares: '{{ grafana_cpu_shares }}'
    networks:
      - name: '{{ docker_network_name | default(omit) }}'
    ports:
      - '{{ grafana_listen_addr }}'
    volumes:
      - '{{ selfservice_directory }}/nginx.conf:/etc/nginx/nginx.conf'
      - '{{ selfservice_directory }}/selfservice/frontend/dist:/data'


---
version: '2.4'
services:
  grafana:
    image: '{{ grafana_image }}'
    container_name: '{{ grafana_container_name }}'
    user: root
    networks:
      - '{{ docker_network_name | default(omit) }}'
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      # yamllint disable-line rule:line-length
      - '{{ grafana_dir }}/provisioning/datasources:/etc/grafana/provisioning/datasources'
      - '{{ grafana_dir }}/data:/var/lib/grafana'
    restart: unless-stopped
    environment:
      GF_SERVER_ROOT_URL: '{{ grafana_domain | default(omit) }}'
      GF_AUTH_PROXY_ENABLED: 'true'
      GF_AUTH_PROXY_HEADER_NAME: 'X-Auth-Request-Email'
      # yamllint disable-line rule:line-length
      GF_AUTH_PROXY_HEADERS: '"Name:X-Auth-Request-User Email:X-Auth-Request-Email"'

networks:
  '{{ docker_network_name }}':
    external: true
